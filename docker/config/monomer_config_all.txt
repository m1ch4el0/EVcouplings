# Configuration rules:
# 1) Global settings override settings for stages
# 2) Outputs of a stage are merged into "global" and fed into input of subsequent stages
# 3) All settings are explicitly specified here. No hidden defaults in code.
# 4) Each stage is also passed the databases and tools sections

batch:

    _b0.2:
       align: {domain_threshold: 0.2, sequence_threshold: 0.2}

    _b0.5:
       align: {domain_threshold: 0.5, sequence_threshold: 0.5}



environment:
  engine: 
  queue: 
  cores: 1
  memory:
  time: 
  configuration:
pipeline: protein_monomer
stages:
- align
# - couplings


global:
  sequence_id: BPHL_HUMAN
  sequence_file:
  region:
  - 1
  - 291
  cpu: 1
  prefix: /n/scratch3/users/h/he47/hybrid_approach/mitoproteome/human/monomer_align/output/BPHL_HUMAN_1-291_b0.5

align:
  protocol: standard
  prefix:
  sequence_id:
  sequence_file:
  region:
  first_index: 1 

  use_bitscores: true
  domain_threshold: 0.5
  sequence_threshold: 0.5
  iterations: 5
  database: uniprot

  compute_num_effective_seqs: false
  theta: 0.8

  seqid_filter:
  minimum_sequence_coverage: 50
  minimum_column_coverage: 50

  extract_annotation: true
  cpu:
  nobias: false
  reuse_alignment: true
  checkpoints_hmm: false
  checkpoints_ali: false

# alternative protocol: reuse existing alignment
#    protocol: existing
#    prefix: ./existing/existing_bpt1
#    # alignment needs to contain region in form SEQID/start-end, or first_index must be set
#    input_alignment: ./infer/PF00014_full.txt
#    sequence_id: BPT1_BOVIN
#    first_index:
#    compute_num_effective_seqs: False
#    theta: 0.8
#    seqid_filter:
#    minimum_sequence_coverage: 50
#    minimum_column_coverage: 70
#    extract_annotation: True

couplings:
  protocol: standard

  prefix:
  alignment_file:
  focus_sequence:
  focus_mode: true
  segments:

  theta: 0.8
  iterations: 100
  alphabet:
  ignore_gaps: true
  lambda_J: 0.01
  lambda_J_times_Lq: true
  lambda_h: 0.01
  lambda_group:
  scale_clusters:
  save_model: true
  reuse_ecs: true
  cpu: 1
  min_sequence_distance: 6 

compare:
  protocol: standard
  prefix:
  sequence_id:
  ec_file:
  target_sequence_file:

    # if by_alignment is False, will use pdb_ids parameter below
  by_alignment: true
  pdb_alignment_method: hmmsearch
  sequence_file:
  first_index:
  region:
  alignment_min_overlap: 20
  use_bitscores: true
  domain_threshold: 0.2
  sequence_threshold: 0.2

    # leave this parameter empty to use all PDB
    # structures for given sequence_id, otherwise
    # will be limited to the given IDs
  pdb_ids:
    # compare to structures
  max_num_structures: 40
  max_num_hits: 40
  compare_multimer: true

    # Comparison and plotting settings
    # set atom_filter to "CA" to compute C_alpha distances instead of minimum atom distances
  atom_filter:
  distance_cutoff: 5
  min_sequence_distance: 6 

  plot_probability_cutoffs: [0.90, 0.99]
    # any of the following can also be floats (fraction of L)
  plot_lowest_count: 0.05
  plot_highest_count: 1.0
  plot_increase: 0.05
  boundaries: union
  draw_secondary_structure: true

  scale_sizes: false

mutate:
  protocol: standard
  prefix:
  model_file:
    # predict the following file (mutants like A102V or A102V,K199W in column "mutant", comma-separated)
  mutation_dataset_file:

fold:
  protocol: standard
  engine: cns_dgsa
  folding_config_file:
  prefix:

  ec_file:
  target_sequence_file:
  segments:
  cut_to_alignment_region: true

  sec_struct_method: psipred
  reuse_sec_struct: true
  sec_struct_file:
  filter_sec_struct_clashes: true
  remapped_pdb_files:

  min_sequence_distance: 6
  fold_probability_cutoffs: [0.90, 0.99]
    # any of the following can also be floats (fraction of L)
  fold_lowest_count: 0.5
  fold_highest_count: 1.3
  fold_increase: 0.05
  num_models: 10
  cpu:

management:
  delete: [raw_alignment_file]

databases:
  uniprot: /n/groups/marks/databases/jackhmmer/uniprot/uniprot_2023_6.fasta
  uniref100: /n/groups/marks/databases/jackhmmer/uniref100/uniref100_2023_6.fasta
  uniref90: /n/groups/marks/databases/jackhmmer/uniref90/uniref90_2023_6.fasta
  pdb_seqres: /n/groups/marks/databases/pdb_2019_11_26/pdb_seqres.txt
  sequence_download_url: http://www.uniprot.org/uniprot/{}.fasta
  pdb_mmtf_dir:
  sifts_mapping_table: /n/groups/marks/databases/SIFTS/pdb_chain_uniprot_plus_2023_6_9.csv
  sifts_sequence_db: /n/groups/marks/databases/SIFTS/pdb_chain_uniprot_plus_2023_6_9.fasta
  uniprot_to_embl_table: /n/groups/marks/databases/complexes/idmapping/idmapping_uniprot_embl_2020_08.txt
  ena_genome_location_table: /n/groups/marks/databases/complexes/ena/2020_08/cds_pro.txt

tools:
  jackhmmer: /n/groups/marks/pipelines/evcouplings/software/hmmer-3.1b2-linux-intel-x86_64/binaries/jackhmmer
  hmmbuild: /n/groups/marks/pipelines/evcouplings/software/hmmer-3.1b2-linux-intel-x86_64/binaries/hmmbuild
  hmmsearch: /n/groups/marks/pipelines/evcouplings/software/hmmer-3.1b2-linux-intel-x86_64/binaries/hmmsearch
  hhfilter: /n/groups/marks/pipelines/evcouplings/software/hh-suite/bin/hhfilter
  plmc: /n/groups/marks/pipelines/evcouplings/software/plmc/bin/plmc
  psipred: /n/groups/marks/software/runpsipred
  cns: /n/groups/marks/pipelines/evcouplings/software/cns_solve_1.21/intel-x86_64bit-linux/bin/cns
  maxcluster: /n/groups/marks/pipelines/evcouplings/software/maxcluster64bit
